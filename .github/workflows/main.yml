name: 'CICD example for Hello World webserver - EC2'
run-name: ${{ github.actor }} is deploying a Hello World webserver onto AWS EC2
on: 
  workflow_dispatch:
  push: 

env: 
  URL: ""

jobs: 
  Terraform-CI:
    name: Terraform CI
    runs-on: ubuntu-latest
    steps:
      - name: Declare event
        run: echo "The Terraform Continuous Integration is automatically triggered by a ${{ github.event_name }} event."
        
      - name: Checkout
        uses: actions/checkout@v3
    
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2 
    
          
      - name: Terraform fmt
        id: fmt
        working-directory: ./terraform-method/terraform-files
        run: terraform fmt -check
    
      - name: Terraform Init
        id: init
        working-directory: ./terraform-method/terraform-files
        run: terraform init
    
      - name: Terraform Validate
        id: validate
        working-directory: ./terraform-method/terraform-files
        run: terraform validate -no-color

  
  Terraform-CD:
    needs: Terraform-CI
    name: Terraform CD
    runs-on: ubuntu-latest
    steps:
      - name: Declare event
        run: echo "The Terraform Continuous Deployment is automatically triggered by a ${{ github.event_name }} event."
        
      - name: Checkout
        uses: actions/checkout@v3
    
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2 

      - name: Terraform Init
        id: init
        working-directory: ./terraform-method/terraform-files
        run: terraform init
    
      - name: Terraform Plan
        id: plan
        working-directory: ./terraform-method/terraform-files
        run: terraform plan 

      - name: Terraform apply
        id: apply               
        working-directory: ./terraform-method/terraform-files
        run: |
          terraform apply --auto-approve     
          
      - name: Verify Hello-World
        id: verify
        run : curl $(terraform output instance_public_dns)
        